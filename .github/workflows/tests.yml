name: tests

on:
  push:
    branches:
      - develop
      - master
  pull_request:
    branches:
      - develop
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: [8.3, 8.4]
        
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: openmailer_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, pdo_mysql
          coverage: xdebug

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache/files
          key: composer-php${{ matrix.php-version }}-${{ hashFiles('composer.lock') }}
          restore-keys: |
            composer-php${{ matrix.php-version }}-
            composer-

      - name: Install Composer dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Node dependencies
        run: npm ci

      - name: Copy environment file
        run: cp .env.example .env.testing

      - name: Generate application key
        run: php artisan key:generate --env=testing

      - name: Create SQLite database
        run: touch database/database.sqlite

      - name: Set up database
        run: |
          php artisan migrate --env=testing --force
          php artisan db:seed --env=testing --force

      - name: Build frontend assets
        run: npm run build

      - name: Run PHPUnit tests
        run: php artisan test --coverage --min=80

      - name: Run Pest tests (if using Pest)
        if: hashFiles('tests/Pest.php') != ''
        run: vendor/bin/pest --coverage --min=80

      - name: Upload coverage reports to Codecov
        if: matrix.php-version == '8.3'
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml
          fail_ci_if_error: true

  feature-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv

      - name: Install Composer dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Node dependencies
        run: npm ci

      - name: Copy environment file
        run: cp .env.example .env

      - name: Generate application key
        run: php artisan key:generate

      - name: Create SQLite database
        run: touch database/database.sqlite

      - name: Run migrations
        run: php artisan migrate --force

      - name: Build assets
        run: npm run build

      - name: Start Laravel server
        run: php artisan serve --host=127.0.0.1 --port=8000 &
        
      - name: Wait for server
        run: sleep 5

      - name: Run basic smoke tests
        run: |
          curl -f http://127.0.0.1:8000 || exit 1
          echo "âœ… Homepage loads successfully"
